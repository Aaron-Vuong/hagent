"""
Script to build a Perfetto Trace from a run directory with input/output YAML files.
"""
import argparse
import logging
import os

from typing import (
    List,
)

from hagent.core.tracer import (
    Tracer,
    parse_yaml_files,
    scan_for_yamls,
)

logger = logging.getLogger(__name__)

def parse_arguments() -> argparse.ArgumentParser:
    parser = argparse.ArgumentParser(
        description='Perfetto trace builder using a directory of Step input/outputs.')
    parser.add_argument(
        '-i',
        '--input-dir',
        type=str,
        required=True,
        help='Scans this directory for YAML files generated by Steps.'
    )
    parser.add_argument(
        '--asynchronous',
        action='store_true',
        help='Builds a Perfetto trace that displays Steps as parallel as possible.'
    )
    parser.add_argument(
        '-o',
        '--output-file',
        type=str,
        default='perfetto.json',
        help='Name of the output Perfetto Trace.'
    )
    parser.add_argument(
        '--step-offset',
        type=int,
        default=0,
        help='How far apart Steps should be placed in an asynchronous trace.'
    )
    return parser


def generate_perfetto_trace(yaml_files: List[str], output_file: str, asynchronous: bool, step_offset: int):
    """
    Generates a Perfetto Trace given all relevant YAML files.

    Args:
        yaml_files: The list of relevant YAML files to include in the trace.
        output_file: The output file to dump the Perfetto Trace to.
        asynchronous: Disregard the actual execution and display an asynchronous ordering.
        step_offset: How far apart Steps should be spaced in the Perfetto timeline.

    """
    # Initial YAMLs used as inputs for a Pipe.
    initial, inputs, outputs = parse_yaml_files(yaml_files)

    logger.debug(f"Initial YAML files: %s", initial)
    logger.debug(f"Input YAML files: %s", inputs)
    logger.debug(f"Output YAML files: %s", outputs)

    Tracer.save_perfetto_trace(
        dependencies=(initial, inputs, outputs),
        filename=output_file,
        asynchronous=asynchronous,
        step_offset=step_offset)

def main():
    parser = parse_arguments()
    args = parser.parse_args()

    logging.basicConfig(filename="perfetto_trace.log", level=logging.INFO)

    yaml_files = scan_for_yamls(args.input_dir)
    logger.info("Gathered YAML files: %s" % yaml_files)
    generate_perfetto_trace(yaml_files, args.output_file, args.asynchronous, args.step_offset)
    logger.info("Finished generated Perfetto trace: [%s]", args.output_file)

if __name__ == "__main__":
    main()
