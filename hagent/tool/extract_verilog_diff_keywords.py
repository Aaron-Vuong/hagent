#!/usr/bin/env python3
"""
Script: extract_verilog_diff_keywords.py

This script:
  1. Reads an original Verilog file and a fixed Verilog file.
  2. Generates a unified diff between the two.
  3. Extracts the main words (identifiers/keywords) from the diff while ignoring comments.
  4. Prints the extracted words.

Usage example:
  poetry run python3 extract_verilog_diff_keywords.py \
      --original_verilog ~/feri/original.v \
      --fixed_verilog ~/feri/fixed.v
"""

import argparse
import difflib
import re
from hagent.tool.fuzzy_grep import Fuzzy_grep


class Extract_verilog_diff_keywords:
    """
    Utility class to generate a unified diff and extract keywords from it.
    """

    @staticmethod
    def generate_diff(old_code: str, new_code: str) -> str:
        """
        Generate a unified diff string comparing old_code vs. new_code.

        :param old_code: Content of the original file.
        :param new_code: Content of the modified file.
        :return: A unified diff as a string.
        """
        old_lines = old_code.splitlines()
        new_lines = new_code.splitlines()
        diff_lines = difflib.unified_diff(
            old_lines, new_lines, fromfile='verilog_original.v', tofile='verilog_fixed.v', lineterm=''
        )
        return '\n'.join(diff_lines)

    @staticmethod
    def extract_variables(line:str)->set:
        # Remove comments
        if '//' in line:
            line = line.split('//')[0]

        # Remove Verilog constants (e.g., 2'h1, 32'd5)
        import re
        line = re.sub(r'\d+\'[bhd]\w+', '', line)

        # Remove curly braces and their contents
        line = re.sub(r'\{[^{}]*\}', '', line)

        # Handle signals with asterisks (like *GEN*1 or *signals*T_110)
        special_signals = re.findall(r'\*\w+\*(\w+)', line)

        # Find all potential variables - alphanumeric with underscores
        # Excluding Verilog keywords and operators
        basic_vars = re.findall(r'[a-zA-Z_][\w_]*', line)

        # Combine both types of variables
        unique_vars = set(special_signals + basic_vars)

        return unique_vars

    @staticmethod
    def get_words(diff_text: str) -> set:
        """
        Extract keywords from a unified diff. It scans lines that are marked as changes
        (starting with '+' or '-' but ignoring file header lines) and extracts all alphanumeric words.
        Comments are removed before processing so that only meaningful code identifiers are retained.

        :param diff_text: The unified diff string.
        :return: A list of unique keywords.
        """
        keywords = set()
        for line in diff_text.splitlines():
            # Look only at changed lines (ignore header lines like '+++' and '---')
            if (line.startswith('+') and not line.startswith('+++')) or (line.startswith('-') and not line.startswith('---')):
                # Remove the diff marker (+ or -)
                words = Extract_verilog_diff_keywords.extract_variables(line[1:])
                keywords.update(words)
        return keywords

    @staticmethod
    def get_user_variables(diff_text: str) -> list:
        """
        Similar to get_words, but remove autogenerated words
        """
        res = Extract_verilog_diff_keywords.get_words(diff_text)
        reserved_words = Fuzzy_grep.get_reserved_keywords('verilog')
        filtered_res = []
        for var_name in res:
            if not var_name.startswith('_T') and not var_name.startswith('_GEN') and var_name not in reserved_words:
                filtered_res.append(var_name)


        return filtered_res

